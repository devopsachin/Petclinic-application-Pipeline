@Library('pet-clinic') _   /*Shared Library  */
import org.foo.*;	   /* annoation */

pipeline{
    agent any
    environment{
        def props = readJSON file: 'resources/pet-clinic.json'
        branch = "${props.gitBranch}"
        gitRepoUrl = "${props.repoUrl}"
        applicationPath = "${props.commonUrl}"
        dockerPath = "${props.dockerFilePath}"
        dockerRepo = "${props.dockerRepoName}"
        applicationName = "${props.applicationName}"
        Serverusername = "${props.serveruserName}"
        ipAdr = "${props.serveripAddress}"
        applicationPort = "${props.port}"
	projectkey = "${props.sonarQubeProjectKey}"

    }
    stages{
        stage('Chekout SCM'){
            steps{
                script{
                    pullGit(
                        branch: "$branch",
                        url: "$gitRepoUrl"
                    )
                }
            }
        }
	stage('SonarQube quality check'){
           steps{
	      script{
	      	  sonarQube.test("$projectkey")
		  }
	     }
	}
		  
	stage('Build'){
            steps{
                script{
                    mvnBuild 'validate'
                    mvnBuild 'package'
                }
            }
        }
        stage('Test'){
            steps{
                script{
                    mvnBuild 'test'
                }
            }
            post{
                always{
                    junit "$applicationPath/TEST-*.xml"
                }
            }
        }
        stage('Push'){
            steps{
                script{
                    def execute = new dockerUtility(this)
                    execute.dockerLogin 'docker-hub'
                    execute.dockerBuild '${WORKSPACE}@script/$dockerPath', '$dockerRepo' , '$applicationName:$BUILD_NUMBER'
                    execute.dockerPush '$dockerRepo' , '$applicationName:$BUILD_NUMBER'
                }
            }
        }
        stage('Deploy'){
            steps{
                script{
                    remoteSSH.ssh("$Serverusername", "$ipAdr", "$applicationName", "$dockerRepo", "$applicationPort" )
                }
            }
            post {
                always{
		     	sleep 10
			    echo " Application is running succsfully in this url http://$ipAdr:$applicationPort " 
			    }
            }   
            }
        }
        
    }
